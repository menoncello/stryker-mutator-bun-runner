name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    name: Test on Node ${{ matrix.node }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:
        node: ['20.x', '22.x']
        os: [ubuntu-latest, macos-latest]
        bun: ['latest']
        include:
          # Test with minimum supported versions on Ubuntu
          - os: ubuntu-latest
            node: '20.x'
            bun: '1.0.0'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Bun ${{ matrix.bun }}
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ matrix.bun }}
      
      - name: Setup Node.js ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build
        run: npm run build
      
      - name: Lint
        run: npm run lint
      
      - name: Type check
        run: npm run typecheck
      
      - name: Test
        run: npm test
      
      - name: Test Coverage
        run: npm run test:coverage
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        if: matrix.os == 'ubuntu-latest' && matrix.node == '20.x' && matrix.bun == 'latest'
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

  example-test:
    name: Test Example Project
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install and build plugin
        run: |
          npm ci
          npm run build
      
      - name: Test Example Project
        run: |
          cd example
          npm install
          npm link ..
          bun test
          npx stryker run
      
      - name: Upload mutation report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: example-mutation-report
          path: example/reports/mutation/mutation.html

  mutation-testing:
    name: Mutation Testing (Plugin)
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build
        run: npm run build
      
      - name: Run Stryker on Plugin
        run: npx stryker run
        env:
          STRYKER_DASHBOARD_API_KEY: ${{ secrets.STRYKER_DASHBOARD_API_KEY }}
      
      - name: Upload mutation report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: plugin-mutation-report
          path: reports/mutation/mutation.html

  lint-and-format:
    name: Lint and Format Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: ESLint Check
        run: npm run lint
      
      - name: TypeScript Check
        run: npm run typecheck
      
      - name: Check for uncommitted changes
        run: |
          npm run build
          if [[ -n $(git status --porcelain) ]]; then
            echo "There are uncommitted changes after running build"
            git diff
            exit 1
          fi

  package-test:
    name: Package Installation Test
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build
        run: npm run build
      
      - name: Pack
        run: npm pack
      
      - name: Test package installation
        run: |
          mkdir test-install
          cd test-install
          npm init -y
          npm install ../stryker-mutator-bun-runner-*.tgz
          npm install @stryker-mutator/core
          
          # Create a simple test to verify the plugin loads
          cat > test-load.mjs << 'EOF'
          import { strykerPlugins } from '@stryker-mutator/bun-runner';
          console.log('Plugin loaded successfully:', strykerPlugins.length > 0);
          process.exit(strykerPlugins.length > 0 ? 0 : 1);
          EOF
          
          node test-load.mjs

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run security audit
        run: npm audit --production
        continue-on-error: true